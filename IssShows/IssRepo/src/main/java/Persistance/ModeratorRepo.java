package Persistance;/*
* This code has been generated by the Rebel: a code generator for modern Java.
*
* Drop us a line or two at feedback@archetypesoftware.com: we would love to hear from you!
*/

import HiberPack.HModerator;
import Moodel.Moderator;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

import java.util.*;


// ----------- << imports@AAAAAAF5f7/jPNQLqU0= >>
// ----------- >>

// ----------- << class.annotations@AAAAAAF5f7/jPNQLqU0= >>
// ----------- >>
public class ModeratorRepo implements Repository<Long, Moderator> {

    static SessionFactory sessionFactory;
    public ModeratorRepo() {

        final StandardServiceRegistry registry = new StandardServiceRegistryBuilder()
                .configure()
                .build();
        try {
            sessionFactory = new MetadataSources( registry ).buildMetadata().buildSessionFactory();
        }
        catch (Exception e) {
            System.err.println("Exception "+e);
            StandardServiceRegistryBuilder.destroy( registry );
        }

    }

    /**
    * @param X
    */

    @Override
    // ----------- << method.annotations@AAAAAAF5f8TlltRW1ik= >>
    // ----------- >>
    public void save(Moderator X) {
    // ----------- << method.body@AAAAAAF5f8TlltRW1ik= >>
    // ----------- >>
    }
    /**
    * @param X
    */

    @Override
    // ----------- << method.annotations@AAAAAAF5f8WiXdRfIwM= >>
    // ----------- >>
    public void update(Moderator X) {
    // ----------- << method.body@AAAAAAF5f8WiXdRfIwM= >>
    // ----------- >>
    }
    /**
    * @param X
    */

    @Override
    // ----------- << method.annotations@AAAAAAF5f8dNf9Rp3x4= >>
    // ----------- >>
    public void delete(Moderator X) {
    // ----------- << method.body@AAAAAAF5f8dNf9Rp3x4= >>
    // ----------- >>
    }
    @Override
    // ----------- << method.annotations@AAAAAAF5f8lruNRwE7I= >>
    // ----------- >>
    public Moderator findOne() {
    // ----------- << method.body@AAAAAAF5f8lruNRwE7I= >>
    // ----------- >>
        return null;
    }
    @Override
    // ----------- << method.annotations@AAAAAAF5f8nwh9R8rQ8= >>
    // ----------- >>
    public Iterable<Moderator> findAll() {

        List<Moderator> us = new ArrayList<>();
        try(Session session = sessionFactory.openSession()) {
            Transaction tx = null;
            try {
                tx = session.beginTransaction();
                List<HModerator> users = session.createQuery("FROM HModerator ", HModerator.class).list();

                System.out.println(users.size() + " message(s) found:");
                for (HModerator user : users) {
                    System.out.println(user);
                    Moderator uss = new Moderator(user.getUsername(),user.getPasswd());
                    uss.setID(user.getID());
                    us.add(uss);
                }
                tx.commit();
            } catch (RuntimeException ex) {
                System.out.println(ex);
                if (tx != null)
                    tx.rollback();
            }
        }
        return us;
    }
    /**
    * @param username
    */

    // ----------- << method.annotations@AAAAAAF5gEPvpNiKb4Y= >>
    // ----------- >>
    public Moderator GetByName(String username) {
        Moderator us = null;
        try(Session session = sessionFactory.openSession()) {
            Transaction tx = null;
            try {
                tx = session.beginTransaction();
                List<HModerator> users = session.createQuery("FROM HModerator where username='"+ username + "'", HModerator.class).list();



                System.out.println(users.size() + " message(s) found:");
                if (users.size()!=0) {
                    HModerator hr = users.get(0);
                    us = new Moderator(hr.getUsername(),hr.getPasswd());
                    us.setID(hr.getID());
                }
                tx.commit();
            } catch (RuntimeException ex) {
                System.out.println(ex);
                if (tx != null)
                    tx.rollback();
            }
        }
        return us;
    }
// ----------- << class.extras@AAAAAAF5f7/jPNQLqU0= >>
// ----------- >>
}